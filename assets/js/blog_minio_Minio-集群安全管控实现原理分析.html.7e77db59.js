"use strict";(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[4083],{7241:(s,n,a)=>{a.r(n),a.d(n,{comp:()=>l,data:()=>t});var e=a(641);const i=[(0,e.Fv)('<h1 id="minio-集群安全管控实现原理分析" tabindex="-1"><a class="header-anchor" href="#minio-集群安全管控实现原理分析"><span>Minio 集群安全管控实现原理分析</span></a></h1><p>MinIO 集群的安全管控实现原理包括多种安全机制，以确保数据的机密性、完整性和可用性。以下是 MinIO 集群 安全管控的主要实现原理和机制：</p><h3 id="_1-访问控制和身份验证" tabindex="-1"><a class="header-anchor" href="#_1-访问控制和身份验证"><span>1. 访问控制和身份验证</span></a></h3><h4 id="基于策略的访问控制-iam-policies" tabindex="-1"><a class="header-anchor" href="#基于策略的访问控制-iam-policies"><span>基于策略的访问控制（IAM Policies）</span></a></h4><p>MinIO 使用策略来控制对资源的访问。这些策略可以定义哪些用户或服务账户可以对哪些资源执行哪些操作。策略基 于 JSON 格式，类似于 AWS IAM 策略。</p><p>示例策略：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">&quot;Version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2012-10-17&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;Statement&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token property">&quot;Effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Allow&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token property">&quot;Action&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token string">&quot;s3:GetObject&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token string">&quot;s3:PutObject&quot;</span></span>\n<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token property">&quot;Resource&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token string">&quot;arn:aws:s3:::my-bucket/*&quot;</span></span>\n<span class="line">      <span class="token punctuation">]</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="多因素身份验证-mfa" tabindex="-1"><a class="header-anchor" href="#多因素身份验证-mfa"><span>多因素身份验证（MFA）</span></a></h4><p>MinIO 支持多因素身份验证，进一步增强账户的安全性。用户可以在登录时使用 MFA 设备生成的动态密码。</p><h3 id="_2-数据加密" tabindex="-1"><a class="header-anchor" href="#_2-数据加密"><span>2. 数据加密</span></a></h3><h4 id="静态数据加密-server-side-encryption-at-rest" tabindex="-1"><a class="header-anchor" href="#静态数据加密-server-side-encryption-at-rest"><span>静态数据加密（Server-Side Encryption at Rest）</span></a></h4><p>MinIO 支持静态数据加密，确保数据在存储时是加密的。用户可以配置 MinIO 使用 KMS（Key Management Service）或自行管理的加密密钥进行数据加密。</p><p>示例配置：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">mc</span> encrypt <span class="token builtin class-name">set</span> sse-s3 myminio/my-bucket</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="传输中数据加密-ssl-tls" tabindex="-1"><a class="header-anchor" href="#传输中数据加密-ssl-tls"><span>传输中数据加密（SSL/TLS）</span></a></h4><p>MinIO 支持通过 SSL/TLS 加密传输中的数据，确保客户端和服务器之间的数据传输是安全的。</p><h3 id="_3-日志记录和监控" tabindex="-1"><a class="header-anchor" href="#_3-日志记录和监控"><span>3. 日志记录和监控</span></a></h3><h4 id="审计日志" tabindex="-1"><a class="header-anchor" href="#审计日志"><span>审计日志</span></a></h4><p>MinIO 生成详细的审计日志，记录所有 API 调用和访问行为。审计日志可以用于安全分析和合规性检查。</p><h4 id="监控和告警" tabindex="-1"><a class="header-anchor" href="#监控和告警"><span>监控和告警</span></a></h4><p>MinIO 提供丰富的监控和告警功能，可以使用 Prometheus 和 Grafana 集成，实时监控系统的状态和性能。</p><h3 id="_4-网络安全" tabindex="-1"><a class="header-anchor" href="#_4-网络安全"><span>4. 网络安全</span></a></h3><h4 id="防火墙和访问控制列表-acls" tabindex="-1"><a class="header-anchor" href="#防火墙和访问控制列表-acls"><span>防火墙和访问控制列表（ACLs）</span></a></h4><p>配置防火墙规则和 ACLs，限制访问 MinIO 集群的 IP 地址范围，防止未授权的访问。</p><h4 id="网络隔离" tabindex="-1"><a class="header-anchor" href="#网络隔离"><span>网络隔离</span></a></h4><p>使用私有网络和虚拟私有云（VPC）隔离 MinIO 集群，确保只有授权的内部服务可以访问。</p><h3 id="_5-高可用性和灾难恢复" tabindex="-1"><a class="header-anchor" href="#_5-高可用性和灾难恢复"><span>5. 高可用性和灾难恢复</span></a></h3><h4 id="数据冗余" tabindex="-1"><a class="header-anchor" href="#数据冗余"><span>数据冗余</span></a></h4><p>MinIO 支持多副本存储，确保数据冗余和高可用性。数据副本可以分布在不同的节点和数据中心，防止单点故障。</p><h4 id="异地复制" tabindex="-1"><a class="header-anchor" href="#异地复制"><span>异地复制</span></a></h4><p>通过异地复制，实现地理冗余，确保在本地数据中心发生灾难时可以快速恢复数据。</p><h3 id="示例实现" tabindex="-1"><a class="header-anchor" href="#示例实现"><span>示例实现</span></a></h3><p>以下是一些具体的实现示例：</p><h4 id="设置静态数据加密" tabindex="-1"><a class="header-anchor" href="#设置静态数据加密"><span>设置静态数据加密</span></a></h4><ol><li><p><strong>启用 KMS（Key Management Service）</strong>：</p><p>在 MinIO 配置文件中启用 KMS：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="line"><span class="token key atrule">kms</span><span class="token punctuation">:</span></span>\n<span class="line">  <span class="token comment"># Use this to specify the KMS configuration</span></span>\n<span class="line">  <span class="token key atrule">auto_encryption</span><span class="token punctuation">:</span> on</span>\n<span class="line">  <span class="token comment"># (Optionally) Provide the KMS endpoint, access and secret keys for a different KMS service</span></span>\n<span class="line">  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span> <span class="token string">&quot;https://kms-endpoint&quot;</span></span>\n<span class="line">  <span class="token key atrule">access_key</span><span class="token punctuation">:</span> <span class="token string">&quot;access-key&quot;</span></span>\n<span class="line">  <span class="token key atrule">secret_key</span><span class="token punctuation">:</span> <span class="token string">&quot;secret-key&quot;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>启用桶加密</strong>：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">mc</span> encrypt <span class="token builtin class-name">set</span> sse-s3 myminio/my-bucket</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h4 id="启用传输中数据加密" tabindex="-1"><a class="header-anchor" href="#启用传输中数据加密"><span>启用传输中数据加密</span></a></h4><ol><li><p><strong>生成 SSL 证书</strong>：</p><p>使用 <code>openssl</code> 生成 SSL 证书：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">openssl req <span class="token parameter variable">-x509</span> <span class="token parameter variable">-newkey</span> rsa:4096 <span class="token parameter variable">-keyout</span> key.pem <span class="token parameter variable">-out</span> cert.pem <span class="token parameter variable">-days</span> <span class="token number">365</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>配置 MinIO 使用 SSL 证书</strong>：</p><p>将生成的 <code>key.pem</code> 和 <code>cert.pem</code> 文件放置在 MinIO 配置目录下，并在 MinIO 启动命令中指定 SSL 证书：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_ACCESS_KEY</span><span class="token operator">=</span>your-access-key</span>\n<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">MINIO_SECRET_KEY</span><span class="token operator">=</span>your-secret-key</span>\n<span class="line">minio server --certs-dir /path/to/certs /data</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="设置-iam-策略" tabindex="-1"><a class="header-anchor" href="#设置-iam-策略"><span>设置 IAM 策略</span></a></h4><ol><li><p><strong>创建策略</strong>：</p><p>创建一个策略 JSON 文件：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre class="language-json"><code><span class="line"><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">&quot;Version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2012-10-17&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token property">&quot;Statement&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token property">&quot;Effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Allow&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token property">&quot;Action&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token string">&quot;s3:GetObject&quot;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token string">&quot;s3:PutObject&quot;</span></span>\n<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token property">&quot;Resource&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">        <span class="token string">&quot;arn:aws:s3:::my-bucket/*&quot;</span></span>\n<span class="line">      <span class="token punctuation">]</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>应用策略</strong>：</p><p>使用 <code>mc</code> 命令行工具应用策略：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">mc</span> admin policy <span class="token function">add</span> myminio readwrite-policy /path/to/policy.json</span>\n<span class="line"><span class="token function">mc</span> admin user <span class="token function">add</span> myminio user1 password123</span>\n<span class="line"><span class="token function">mc</span> admin policy <span class="token builtin class-name">set</span> myminio readwrite-policy <span class="token assign-left variable">user</span><span class="token operator">=</span>user1</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>MinIO 集群通过多种安全机制实现了全面的安全管控，包括基于策略的访问控制、多因素身份验证、数据加密、日志 记录和监控、网络安全、高可用性和灾难恢复等。通过这些安全措施，MinIO 能够提供一个高安全性、高可用性的对 象存储解决方案，确保数据的机密性、完整性和可用性。</p>',41)],p={},l=(0,a(6262).A)(p,[["render",function(s,n){return(0,e.uX)(),(0,e.CE)("div",null,i)}]]),t=JSON.parse('{"path":"/blog/minio/Minio-%E9%9B%86%E7%BE%A4%E5%AE%89%E5%85%A8%E7%AE%A1%E6%8E%A7%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90.html","title":"Minio 集群安全管控实现原理分析","lang":"zh-CN","frontmatter":{"date":"2021-07-07T00:00:00.000Z","category":["Minio"],"tag":["对象存储"],"sticky":true,"excerpt":"<p> Minio 上传请求负载分析 </p>"},"headers":[{"level":3,"title":"1. 访问控制和身份验证","slug":"_1-访问控制和身份验证","link":"#_1-访问控制和身份验证","children":[]},{"level":3,"title":"2. 数据加密","slug":"_2-数据加密","link":"#_2-数据加密","children":[]},{"level":3,"title":"3. 日志记录和监控","slug":"_3-日志记录和监控","link":"#_3-日志记录和监控","children":[]},{"level":3,"title":"4. 网络安全","slug":"_4-网络安全","link":"#_4-网络安全","children":[]},{"level":3,"title":"5. 高可用性和灾难恢复","slug":"_5-高可用性和灾难恢复","link":"#_5-高可用性和灾难恢复","children":[]},{"level":3,"title":"示例实现","slug":"示例实现","link":"#示例实现","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1720534160000,"contributors":[{"name":"asus","email":"939943844@qq.com","commits":1}]},"filePathRelative":"blog/minio/Minio-集群安全管控实现原理分析.md"}')}}]);