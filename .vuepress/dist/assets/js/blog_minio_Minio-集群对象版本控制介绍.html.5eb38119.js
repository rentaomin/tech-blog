"use strict";(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[304],{31:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>c,data:()=>l});var p=a(641);const t=[(0,p.Fv)('<h1 id="minio-集群对象版本控制介绍" tabindex="-1"><a class="header-anchor" href="#minio-集群对象版本控制介绍"><span>Minio 集群对象版本控制介绍</span></a></h1><p>MinIO 集群的对象版本控制机制允许用户对存储在 MinIO 中的对象进行版本管理。通过对象版本控制，用户可以 保存对象的多个版本，并在需要时回滚到以前的版本。这种机制在数据恢复和数据管理方面非常有用。</p><h3 id="对象版本控制机制的基本概念" tabindex="-1"><a class="header-anchor" href="#对象版本控制机制的基本概念"><span>对象版本控制机制的基本概念</span></a></h3><ol><li><strong>对象版本</strong>：对象版本是同一个对象在不同时刻的多个副本。每次对对象进行修改或删除操作时，MinIO 都会 为该对象创建一个新的版本。</li><li><strong>版本 ID</strong>：每个对象版本都有一个唯一的版本 ID，用于标识该版本。</li><li><strong>版本管理</strong>：用户可以通过版本 ID 访问、恢复或删除特定版本的对象。</li></ol><h3 id="minio-对象版本控制的实现原理" tabindex="-1"><a class="header-anchor" href="#minio-对象版本控制的实现原理"><span>MinIO 对象版本控制的实现原理</span></a></h3><p>MinIO 对象版本控制的实现主要包括以下几个方面：</p><ol><li><strong>版本化配置</strong>：启用或禁用存储桶的版本控制。</li><li><strong>版本化存储</strong>：存储对象的多个版本，并为每个版本分配一个唯一的版本 ID。</li><li><strong>版本管理操作</strong>：提供接口用于获取、恢复和删除对象的特定版本。</li></ol><h3 id="版本控制的主要步骤" tabindex="-1"><a class="header-anchor" href="#版本控制的主要步骤"><span>版本控制的主要步骤</span></a></h3><ol><li><strong>启用版本控制</strong>：在存储桶上启用版本控制。</li><li><strong>存储对象版本</strong>：每次对对象进行修改或删除时，创建一个新的版本，并保留旧版本。</li><li><strong>访问对象版本</strong>：通过版本 ID 获取特定版本的对象。</li><li><strong>恢复对象版本</strong>：将对象恢复到某个特定的版本。</li><li><strong>删除对象版本</strong>：删除特定版本的对象。</li></ol><h3 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h3><p>以下是一个使用 MinIO 客户端库实现对象版本控制的 Java 示例代码，展示了如何启用版本控制、上传对象、获取对象的 特定版本和删除对象版本。</p><h4 id="_1-初始化-minio-客户端" tabindex="-1"><a class="header-anchor" href="#_1-初始化-minio-客户端"><span>1. 初始化 MinIO 客户端</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>minio<span class="token punctuation">.</span></span><span class="token class-name">MinioClient</span></span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>minio<span class="token punctuation">.</span>errors<span class="token punctuation">.</span></span><span class="token class-name">MinioException</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MinioVersionControlExample</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 创建 MinioClient</span></span>\n<span class="line">            <span class="token class-name">MinioClient</span> minioClient <span class="token operator">=</span> <span class="token class-name">MinioClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                    <span class="token punctuation">.</span><span class="token function">endpoint</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:9000&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">                    <span class="token punctuation">.</span><span class="token function">credentials</span><span class="token punctuation">(</span><span class="token string">&quot;accessKey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;secretKey&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 存储桶名称</span></span>\n<span class="line">            <span class="token class-name">String</span> bucketName <span class="token operator">=</span> <span class="token string">&quot;my-bucket&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 启用版本控制</span></span>\n<span class="line">            <span class="token function">enableVersioning</span><span class="token punctuation">(</span>minioClient<span class="token punctuation">,</span> bucketName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 上传对象</span></span>\n<span class="line">            <span class="token class-name">String</span> objectName <span class="token operator">=</span> <span class="token string">&quot;my-object.txt&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span> filePath <span class="token operator">=</span> <span class="token string">&quot;/path/to/file.txt&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            minioClient<span class="token punctuation">.</span><span class="token function">uploadObject</span><span class="token punctuation">(</span></span>\n<span class="line">                    <span class="token class-name">UploadObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                            <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span></span>\n<span class="line">                            <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span></span>\n<span class="line">                            <span class="token punctuation">.</span><span class="token function">filename</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span></span>\n<span class="line">                            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">            <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 获取对象的最新版本</span></span>\n<span class="line">            <span class="token function">getObject</span><span class="token punctuation">(</span>minioClient<span class="token punctuation">,</span> bucketName<span class="token punctuation">,</span> objectName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 获取对象的特定版本</span></span>\n<span class="line">            <span class="token class-name">String</span> versionId <span class="token operator">=</span> <span class="token string">&quot;example-version-id&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token function">getObjectVersion</span><span class="token punctuation">(</span>minioClient<span class="token punctuation">,</span> bucketName<span class="token punctuation">,</span> objectName<span class="token punctuation">,</span> versionId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">            <span class="token comment">// 删除对象的特定版本</span></span>\n<span class="line">            <span class="token function">deleteObjectVersion</span><span class="token punctuation">(</span>minioClient<span class="token punctuation">,</span> bucketName<span class="token punctuation">,</span> objectName<span class="token punctuation">,</span> versionId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MinioException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Error occurred: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">// 启用版本控制</span></span>\n<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">enableVersioning</span><span class="token punctuation">(</span><span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">,</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">)</span> </span>\n<span class="line">        <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">        minioClient<span class="token punctuation">.</span><span class="token function">setBucketVersioning</span><span class="token punctuation">(</span></span>\n<span class="line">                <span class="token class-name">SetBucketVersioningArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VersioningConfiguration</span><span class="token punctuation">(</span><span class="token class-name">VersioningConfiguration<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">ENABLED</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">// 获取对象的最新版本</span></span>\n<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">,</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token class-name">String</span> objectName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> stream <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span></span>\n<span class="line">                <span class="token class-name">GetObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">16384</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">int</span> bytesRead<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>bytesRead <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">// 获取对象的特定版本</span></span>\n<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">getObjectVersion</span><span class="token punctuation">(</span><span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">,</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> versionId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> stream <span class="token operator">=</span> minioClient<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span></span>\n<span class="line">                <span class="token class-name">GetObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">versionId</span><span class="token punctuation">(</span>versionId<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">16384</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">int</span> bytesRead<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>bytesRead <span class="token operator">=</span> stream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buf<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytesRead<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">// 删除对象的特定版本</span></span>\n<span class="line">    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">deleteObjectVersion</span><span class="token punctuation">(</span><span class="token class-name">MinioClient</span> minioClient<span class="token punctuation">,</span> <span class="token class-name">String</span> bucketName<span class="token punctuation">,</span> </span>\n<span class="line">        <span class="token class-name">String</span> objectName<span class="token punctuation">,</span> <span class="token class-name">String</span> versionId<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">        minioClient<span class="token punctuation">.</span><span class="token function">removeObject</span><span class="token punctuation">(</span></span>\n<span class="line">                <span class="token class-name">RemoveObjectArgs</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">object</span><span class="token punctuation">(</span>objectName<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">versionId</span><span class="token punctuation">(</span>versionId<span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本控制的工作流程" tabindex="-1"><a class="header-anchor" href="#版本控制的工作流程"><span>版本控制的工作流程</span></a></h3><ol><li><p><strong>启用版本控制</strong>：</p><ul><li>在存储桶上启用版本控制后，MinIO 会为该存储桶中的所有对象启用版本管理。</li><li>所有新的写操作（上传、修改、删除）都会生成新的版本。</li></ul></li><li><p><strong>存储对象版本</strong>：</p><ul><li>每次上传、修改或删除对象时，MinIO 会创建一个新的版本并分配一个唯一的版本 ID。</li><li>旧版本的对象仍然保留，并且可以通过版本 ID 进行访问。</li></ul></li><li><p><strong>访问对象版本</strong>：</p><ul><li>通过指定版本 ID，用户可以访问特定版本的对象。</li><li>如果不指定版本 ID，则返回最新版本的对象。</li></ul></li><li><p><strong>恢复对象版本</strong>：</p><ul><li>用户可以将对象恢复到某个特定的版本，以撤销最近的修改。</li></ul></li><li><p><strong>删除对象版本</strong>：</p><ul><li>用户可以删除特定版本的对象，从而管理存储空间和版本历史。</li></ul></li></ol><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>MinIO 的对象版本控制机制通过对存储桶启用版本控制，实现对对象多个版本的管理。通过记录每个版本的变更， MinIO 能够在需要时恢复到以前的版本，确保数据的安全性和可恢复性。版本控制的实现涉及版本 ID 的管理、 版本化存储和版本管理操作，确保数据的一致性和持久性。</p>',17)],e={},c=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,t)}]]),l=JSON.parse('{"path":"/blog/minio/Minio-%E9%9B%86%E7%BE%A4%E5%AF%B9%E8%B1%A1%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E4%BB%8B%E7%BB%8D.html","title":"Minio 集群对象版本控制介绍","lang":"zh-CN","frontmatter":{"date":"2021-07-07T00:00:00.000Z","category":["Minio"],"tag":["对象存储"],"sticky":true,"excerpt":"<p> Minio 上传请求负载分析 </p>"},"headers":[{"level":3,"title":"对象版本控制机制的基本概念","slug":"对象版本控制机制的基本概念","link":"#对象版本控制机制的基本概念","children":[]},{"level":3,"title":"MinIO 对象版本控制的实现原理","slug":"minio-对象版本控制的实现原理","link":"#minio-对象版本控制的实现原理","children":[]},{"level":3,"title":"版本控制的主要步骤","slug":"版本控制的主要步骤","link":"#版本控制的主要步骤","children":[]},{"level":3,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]},{"level":3,"title":"版本控制的工作流程","slug":"版本控制的工作流程","link":"#版本控制的工作流程","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1720877624000,"contributors":[{"name":"asus","email":"939943844@qq.com","commits":1}]},"filePathRelative":"blog/minio/Minio-集群对象版本控制介绍.md"}')}}]);