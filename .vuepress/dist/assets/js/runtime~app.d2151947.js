(()=>{"use strict";var e,o,a,l={},i={};function t(e){var o=i[e];if(void 0!==o)return o.exports;var a=i[e]={exports:{}};return l[e](a,a.exports,t),a.exports}t.m=l,e=[],t.O=(o,a,l,i)=>{if(!a){var _=1/0;for(m=0;m<e.length;m++){for(var[a,l,i]=e[m],r=!0,n=0;n<a.length;n++)(!1&i||_>=i)&&Object.keys(t.O).every((e=>t.O[e](a[n])))?a.splice(n--,1):(r=!1,i<_&&(_=i));if(r){e.splice(m--,1);var b=l();void 0!==b&&(o=b)}}return o}i=i||0;for(var m=e.length;m>0&&e[m-1][2]>i;m--)e[m]=e[m-1];e[m]=[a,l,i]},t.d=(e,o)=>{for(var a in o)t.o(o,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:o[a]})},t.f={},t.e=e=>Promise.all(Object.keys(t.f).reduce(((o,a)=>(t.f[a](e,o),o)),[])),t.u=e=>"assets/js/"+{4:"blog_kafka_Kafka-集群原理设计（二）之源码设计示例分析.html",217:"tag_消息队列_index.html",304:"blog_minio_Minio-集群对象版本控制介绍.html",446:"blog_kafka_Kafka-集群状态监测、故障切换机制原理.html",468:"blog_minio_getting-started.html",712:"blog_minio_Minio-分布式锁实现机制.html",749:"blog_minio_Minio-集群数据分片如何确认完整性和一致性.html",809:"blog_minio_Minio-集群数据备份和数据复制的区别.html",900:"blog_minio_Minio-集群超大文件上传和异步复制如何确定分块大小.html",936:"blog_minio_Minio-单机和集群部署模式.html",958:"blog_zookeeper_zookeeper集群部署安装.html",1060:"blog_minio_Minio-灾难恢复操作与原理分析.html",1797:"tag_index.html",1799:"blog_kafka_Kafka-集群Topic之Partion分布原理设计（三）.html",1831:"blog_kafka_Kafka-集群Topic之Partion消息可靠性设计（一）.html",1916:"blog_minio_Minio-集群是如何处理客户端请求.html",2198:"blog_kafka_Kafka-集群原理设计(三)之启动原理介绍.html",2380:"blog_kafka_Kafka-必备基础知识.html",2402:"blog_zookeeper_zookeeper-znode数据结构.html",3428:"blog_minio_Minio-集群节点是如何实现通信和数据同步的.html",3546:"blog_zookeeper_getting-started.html",3583:"category_index.html",3603:"blog_kafka_Kafka-集群Topic之Partion副本同步性能设计（四）.html",3609:"blog_minio_Minio-集群节点并行处理超大文件数据分片上传和存储原理分析.html",3829:"blog_zookeeper_Zookeeper学习目标.html",3949:"blog_kafka_Kafka-的单机、集群部署安装.html",3989:"blog_zookeeper_Zookeeper集群节点选举原理实现(三).html",4027:"blog_minio_Minio-数据分片多节点存储Java实现.html",4083:"blog_minio_Minio-集群安全管控实现原理分析.html",4124:"blog_kafka_Kafka-组件架构师需要掌握哪些要点.html",4220:"blog_minio_Minio-集群启动过程执行了哪些逻辑.html",4266:"blog_zookeeper_Zookeeper集群数据视图一致性原理.html",4382:"blog_minio_Minio-架构师必备掌握知识点概览.html",4466:"blog_kafka_getting-started.html",4470:"index.html",4634:"blog_zookeeper_Zookeeper集群节点实现通信原理(一).html",4646:"blog_minio_Minio-集群复制队列超大文件（100G）如何存储复制.html",4742:"category_zookeeper_index.html",4853:"blog_minio_Minio-集群数据备份如何进行冷备.html",5057:"tag_分布式管理_index.html",5163:"blog_kafka_Kafka-集群Topic之Partion数据写入分布原理设计（六）.html",5319:"blog_kafka_Kafka-集群和Zookeeper集群架构设计对比分析.html",5334:"blog_kafka_Kafka-集群如何处理生产者和消费者处理消息速率差异问题.html",5335:"blog_zookeeper_Zookeeper集群节点故障剔除、切换、恢复原理.html",5464:"timeline_index.html",5500:"blog_kafka_Kafka-集群Topic、消息大小、节点格式上限管控原理.html",5628:"blog_kafka_Kafka-集群生产性能调优业务场景.html",5862:"blog_minio_Minio-集群数据写入确认消息机制分析.html",5952:"blog_minio_Minio-学习目标.html",6164:"tag_对象存储_index.html",6280:"blog_zookeeper_Zookeeper集群节点选举原理实现(二).html",6284:"blog_minio_Minio-跨中心集群为什么采用异步复制而非构建一个超大集群.html",6408:"blog_kafka_Kafka-学习目标.html",6430:"blog_zookeeper_Zookeeper集群节点实现通信原理(二).html",6604:"blog_kafka_Kafka-集群Topic之Partion日志分段存储原理设计（五）.html",6618:"blog_kafka_Kafka-集群为什么依赖zookeeper.html",6647:"blog_minio_Minio-基础知识和架构设计概览.html",6711:"blog_zookeeper_Zookeeper集群Session会话一致性实现原理.html",6767:"blog_kafka_Kafka-Topic之Zookeeper数据内容介绍.html",6924:"blog_zookeeper_Zookeeper集群节点选举原理实现(一).html",7218:"blog_minio_Minio-集群生产环境部署示例.html",7281:"blog_minio_Minio-集群冷备数据如何恢复部署.html",7294:"blog_kafka_Kafka-集群节点数量的设计.html",7348:"blog_minio_Minio-上传文件请求负载原理分析.html",7366:"blog_minio_Minio-多站点部署_地理容灾和恢复.html",7378:"blog_kafka_Kafka-集群节点数量与Partition副本数量关系原理.html",7406:"blog_minio_Minio-是如何拆分数据多节点存储的.html",7424:"geting-started.html",7490:"404.html",7511:"article_index.html",7517:"blog_kafka_Kafka-集群元数据之Zookeeper存储介绍.html",7551:"blog_minio_Minio-集群事务日志机制介绍.html",7579:"blog_minio_Minio-集群备份或异地复制如何进行网络带宽限速.html",7726:"blog_kafka_Kafka-集群原理设计（四）之Controller选举和Partition分配.html",7780:"blog_kafka_Kafka-管理节点Controller设计分析.html",7909:"blog_minio_Minio-超大文件优化原理分析.html",8117:"blog_kafka_Kafka-集群的数据顺序写入和零拷贝技术设计实现原理.html",8165:"blog_zookeeper_Zookeeper集群广播事务性能如何保证.html",8204:"blog_minio_Minio-集群部署为什么至少4个节点.html",8422:"blog_kafka_Kafka-集群Controller节点和Zookeeper集群leader节点有何区别联系.html",8656:"category_minio_index.html",8707:"blog_kafka_Kafka-集群安全认证机制的实现.html",8727:"blog_zookeeper_Zookeeper集群的应用场景.html",8895:"blog_zookeeper_Zookeeper集群如何实现数据一致性和顺序性原理.html",8926:"blog_minio_Minio-集群备份全部数据非特定bucket.html",8979:"blog_kafka_Kafka-集群Topic之Partion消息可靠性设计（二）.html",9187:"blog_kafka_Kafka-集群架构设计原理概述.html",9216:"blog_kafka_Kafka-集群原理设计和实现概述(一).html",9299:"blog_kafka_Kafka-Stream流处理设计概述.html",9403:"blog_minio_Minio-集群是如何实现异步复制.html",9536:"blog_zookeeper_Zookeeper客户端命令行基础操作.html",9630:"category_kafka_index.html",9739:"blog_minio_Minio-无中心节点集群与有中心节点集群优缺点.html"}[e]+"."+{4:"0fb1fc3f",217:"70b5fea0",304:"5d6323c3",446:"95c07341",468:"7e0fa1b6",712:"39e85614",749:"cd1fd3c9",809:"fe8d57bf",900:"7887eddb",936:"1e59a15e",958:"901dfbc1",1060:"f91d3311",1797:"937bf476",1799:"1587931c",1831:"97a4b519",1916:"677cbc36",2198:"22a17e88",2380:"9d9d3245",2402:"1dc5f71b",3428:"dfedd085",3546:"2e81e656",3583:"99c05b96",3603:"e7e9b971",3609:"cc081fb1",3829:"06852036",3949:"1c422406",3989:"cc1469f4",4027:"2d9feba1",4083:"cbac2733",4124:"5a47e97d",4220:"edd4a06f",4266:"54d07b9a",4382:"16f852e5",4466:"b1448916",4470:"df3d9c9c",4634:"6b15bf9a",4646:"30162973",4742:"ea8d8ff0",4853:"a8bc8b75",5057:"e14ac87f",5163:"cf2f4abc",5319:"bff81b9e",5334:"372f6542",5335:"c8c8410c",5464:"411f6642",5500:"df7d1769",5628:"a1483387",5862:"e83d7fb5",5952:"243dfabc",6164:"e6d6d752",6280:"25ad2ccc",6284:"57c41adc",6408:"555b1edf",6430:"b03f7bd1",6604:"c7e21379",6618:"0ae30512",6647:"9f24d052",6711:"a63daff0",6767:"abc092fe",6924:"7fc912f5",7218:"0f9fa9f3",7281:"118dfcd4",7294:"d898f236",7348:"6c9e3aba",7366:"a0054716",7378:"8f5e2137",7406:"e6bc3b72",7424:"6ce9d0b0",7490:"06ca67e5",7511:"e22623f9",7517:"c68aebde",7551:"4b1c4bdd",7579:"30208a77",7726:"6be8ee97",7780:"8b92ccea",7909:"0df9453a",8117:"6a2007af",8165:"0c93bd65",8204:"75828603",8422:"bfccad53",8656:"909c2d43",8707:"8b931bb3",8727:"431eef69",8895:"ee753f90",8926:"410fd141",8979:"510c8bfb",9187:"c4142022",9216:"c50ea9ad",9299:"d648555d",9403:"e3133a82",9536:"d1701ed8",9630:"d21e5901",9739:"eae6b85a"}[e]+".js",t.miniCssF=e=>{},t.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),o={},a="arch-guide:",t.l=(e,l,i,_)=>{if(o[e])o[e].push(l);else{var r,n;if(void 0!==i)for(var b=document.getElementsByTagName("script"),m=0;m<b.length;m++){var f=b[m];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==a+i){r=f;break}}r||(n=!0,(r=document.createElement("script")).charset="utf-8",r.timeout=120,t.nc&&r.setAttribute("nonce",t.nc),r.setAttribute("data-webpack",a+i),r.src=e),o[e]=[l];var k=(a,l)=>{r.onerror=r.onload=null,clearTimeout(g);var i=o[e];if(delete o[e],r.parentNode&&r.parentNode.removeChild(r),i&&i.forEach((e=>e(l))),a)return a(l)},g=setTimeout(k.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=k.bind(null,r.onerror),r.onload=k.bind(null,r.onload),n&&document.head.appendChild(r)}},t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.p="/tech-blog/",(()=>{var e={2750:0,7528:0};t.f.j=(o,a)=>{var l=t.o(e,o)?e[o]:void 0;if(0!==l)if(l)a.push(l[2]);else if(/^(2750|7528)$/.test(o))e[o]=0;else{var i=new Promise(((a,i)=>l=e[o]=[a,i]));a.push(l[2]=i);var _=t.p+t.u(o),r=new Error;t.l(_,(a=>{if(t.o(e,o)&&(0!==(l=e[o])&&(e[o]=void 0),l)){var i=a&&("load"===a.type?"missing":a.type),_=a&&a.target&&a.target.src;r.message="Loading chunk "+o+" failed.\n("+i+": "+_+")",r.name="ChunkLoadError",r.type=i,r.request=_,l[1](r)}}),"chunk-"+o,o)}},t.O.j=o=>0===e[o];var o=(o,a)=>{var l,i,[_,r,n]=a,b=0;if(_.some((o=>0!==e[o]))){for(l in r)t.o(r,l)&&(t.m[l]=r[l]);if(n)var m=n(t)}for(o&&o(a);b<_.length;b++)i=_[b],t.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return t.O(m)},a=self.webpackChunkarch_guide=self.webpackChunkarch_guide||[];a.forEach(o.bind(null,0)),a.push=o.bind(null,a.push.bind(a))})()})();