"use strict";(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[6430],{8594:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>l,data:()=>c});var p=a(641);const t=[(0,p.Fv)('<h1 id="zookeeper-集群节点实现通信原理-二" tabindex="-1"><a class="header-anchor" href="#zookeeper-集群节点实现通信原理-二"><span>Zookeeper 集群节点实现通信原理(二)</span></a></h1><h2 id="节点选举领导节点完成如何广播给其他节点进行信息同步-实现原理" tabindex="-1"><a class="header-anchor" href="#节点选举领导节点完成如何广播给其他节点进行信息同步-实现原理"><span>节点选举领导节点完成如何广播给其他节点进行信息同步，实现原理？</span></a></h2><p>在 Zookeeper 中，当领导节点选举完成后，新当选的领导节点需要将其状态广播给所有其他节 点（跟随者节点），并进行数据同步以确保集群中的数据一致性。以下是详细的原理和实现步骤。</p><h3 id="选举完成后的广播和同步过程" tabindex="-1"><a class="header-anchor" href="#选举完成后的广播和同步过程"><span>选举完成后的广播和同步过程</span></a></h3><ol><li><p><strong>领导节点确定</strong>：</p><ul><li>通过 Fast Leader Election 算法，集群中的多数节点选举出一个领导节点（Leader）。</li></ul></li><li><p><strong>领导节点广播消息</strong>：</p><ul><li>新的领导节点向所有其他节点广播其领导身份和最新的 ZXID。</li></ul></li><li><p><strong>跟随者节点确认领导</strong>：</p><ul><li>跟随者节点接收到领导节点的广播消息后，确认领导身份，并准备与领导节点进行数据同步。</li></ul></li><li><p><strong>数据同步（同步阶段）</strong>：</p><ul><li>领导节点将其最新的状态和事务日志发送给跟随者节点。</li><li>跟随者节点接收这些数据，并更新自己的状态以与领导节点保持一致。</li></ul></li><li><p><strong>正常运行（广播阶段）</strong>：</p><ul><li>数据同步完成后，领导节点开始接收客户端请求，并将请求的变更广播给所有跟随者节点。</li></ul></li></ol><h3 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h3><h4 id="_1-领导节点广播消息" tabindex="-1"><a class="header-anchor" href="#_1-领导节点广播消息"><span>1. 领导节点广播消息</span></a></h4><p>领导节点在选举完成后，会向所有跟随者节点广播其领导身份。该广播消息包括领导节点的 ID 和最新的 ZXID。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">LeaderElection</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">announceLeader</span><span class="token punctuation">(</span><span class="token keyword">int</span> leaderId<span class="token punctuation">,</span> <span class="token keyword">long</span> zxid<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">Vote</span> vote <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vote</span><span class="token punctuation">(</span>leaderId<span class="token punctuation">,</span> zxid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">sendVote</span><span class="token punctuation">(</span>vote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-跟随者节点确认领导" tabindex="-1"><a class="header-anchor" href="#_2-跟随者节点确认领导"><span>2. 跟随者节点确认领导</span></a></h4><p>跟随者节点接收到领导节点的广播消息后，确认领导身份，并准备与领导节点进行数据同步。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Follower</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">acknowledgeLeader</span><span class="token punctuation">(</span><span class="token class-name">Vote</span> leaderVote<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acknowledged leader: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>nodeId <span class="token operator">+</span> <span class="token string">&quot; with ZXID: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>zxid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-数据同步" tabindex="-1"><a class="header-anchor" href="#_3-数据同步"><span>3. 数据同步</span></a></h4><p>领导节点将其最新状态和事务日志发送给跟随者节点，确保所有节点的数据一致性。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">synchronizeData</span><span class="token punctuation">(</span><span class="token class-name">Follower</span> follower<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 模拟发送数据</span></span>\n<span class="line">        follower<span class="token punctuation">.</span><span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token string">&quot;latest snapshot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;transaction logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Follower</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received snapshot: &quot;</span> <span class="token operator">+</span> snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received transaction logs: &quot;</span> <span class="token operator">+</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 进行数据更新</span></span>\n<span class="line">        <span class="token function">updateState</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">updateState</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 更新本地状态</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;State updated with latest snapshot and logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-正常运行阶段" tabindex="-1"><a class="header-anchor" href="#_4-正常运行阶段"><span>4. 正常运行阶段</span></a></h4><p>数据同步完成后，领导节点开始接收客户端请求，并将请求的变更广播给所有跟随者节点。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Processing client request: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">broadcastChange</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">broadcastChange</span><span class="token punctuation">(</span><span class="token class-name">String</span> change<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 将变更广播给所有跟随者节点</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Broadcasting change: &quot;</span> <span class="token operator">+</span> change<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="整体流程示例代码" tabindex="-1"><a class="header-anchor" href="#整体流程示例代码"><span>整体流程示例代码</span></a></h3><p>以下是一个简化的代码示例，展示了领导节点选举完成后的广播和同步过程：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Vote</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">int</span> nodeId<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">long</span> zxid<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">Vote</span><span class="token punctuation">(</span><span class="token keyword">int</span> nodeId<span class="token punctuation">,</span> <span class="token keyword">long</span> zxid<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>nodeId <span class="token operator">=</span> nodeId<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>zxid <span class="token operator">=</span> zxid<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">QuorumCnxManager</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Follower</span><span class="token punctuation">&gt;</span></span> followers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">Follower</span> follower<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        followers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> follower<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">sendVote</span><span class="token punctuation">(</span><span class="token class-name">Vote</span> vote<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">acknowledgeLeader</span><span class="token punctuation">(</span>vote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>cnxManager <span class="token operator">=</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">announceAndSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">Vote</span> leaderVote <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vote</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 假设当前领导节点的 ID 是 1，最新的 ZXID 是 200</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">sendVote</span><span class="token punctuation">(</span>leaderVote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token function">synchronizeData</span><span class="token punctuation">(</span>follower<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">synchronizeData</span><span class="token punctuation">(</span><span class="token class-name">Follower</span> follower<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        follower<span class="token punctuation">.</span><span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token string">&quot;latest snapshot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;transaction logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Processing client request: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">broadcastChange</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">broadcastChange</span><span class="token punctuation">(</span><span class="token class-name">String</span> change<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">applyChange</span><span class="token punctuation">(</span>change<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Follower</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">acknowledgeLeader</span><span class="token punctuation">(</span><span class="token class-name">Vote</span> leaderVote<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acknowledged leader: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>nodeId <span class="token operator">+</span></span>\n<span class="line">         <span class="token string">&quot; with ZXID: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>zxid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received snapshot: &quot;</span> <span class="token operator">+</span> snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received transaction logs: &quot;</span> <span class="token operator">+</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">updateState</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">updateState</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;State updated with latest snapshot and logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">applyChange</span><span class="token punctuation">(</span><span class="token class-name">String</span> change<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Applied change: &quot;</span> <span class="token operator">+</span> change<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperLeaderElection</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">QuorumCnxManager</span> cnxManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuorumCnxManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Leader</span> leader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span>cnxManager<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token class-name">Follower</span> follower1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Follower</span> follower2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Follower</span> follower3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> follower1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> follower2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> follower3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        leader<span class="token punctuation">.</span><span class="token function">announceAndSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// 模拟客户端请求</span></span>\n<span class="line">        leader<span class="token punctuation">.</span><span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token string">&quot;Create /node1 data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>在 Zookeeper 中，当领导节点选举完成后，新当选的领导节点会通过以下步骤与其他节点进行同步：</p><ol><li><strong>广播领导节点身份</strong>：领导节点向所有跟随者节点广播其领导身份和最新的 ZXID。</li><li><strong>确认领导身份</strong>：跟随者节点接收到广播消息后，确认领导身份，并准备进行数据同步。</li><li><strong>数据同步</strong>：领导节点将最新状态和事务日志发送给跟随者节点，跟随者节点更新自己的状态以与领导节点保持一致。</li><li><strong>正常运行</strong>：数据同步完成后，领导节点开始接收客户端请求，并将变更广播给所有跟随者节点。</li></ol><p>通过这种机制，Zookeeper 确保了集群中数据的一致性和高可用性。</p><h3 id="同步完成处理客户端请求主要是什么" tabindex="-1"><a class="header-anchor" href="#同步完成处理客户端请求主要是什么"><span>同步完成处理客户端请求主要是什么？</span></a></h3><p>在 Zookeeper 中，当领导节点完成选举并与跟随者节点完成数据同步后，领导节点会开始处理客户端请求。 领导节点处理客户端请求的主要职责包括接收请求、处理事务、将变更广播给跟随者节点以及返回结果给客户端。以下是详细的处理过程和实现逻辑。</p><h3 id="客户端请求处理过程" tabindex="-1"><a class="header-anchor" href="#客户端请求处理过程"><span>客户端请求处理过程</span></a></h3><ol><li><p><strong>接收客户端请求</strong>：</p><ul><li>客户端向 Zookeeper 集群发送请求（如创建、删除、更新节点）。</li><li>请求首先由领导节点接收，领导节点负责协调处理请求。</li></ul></li><li><p><strong>处理请求和生成事务</strong>：</p><ul><li>领导节点处理请求并生成一个对应的事务。事务包括请求的类型（如创建、删除、更新节点）、涉及的 ZNode 路径和数据等。</li></ul></li><li><p><strong>事务广播</strong>：</p><ul><li>领导节点将生成的事务通过广播方式发送给所有跟随者节点。</li><li>每个跟随者节点接收到事务后，会进行本地记录，但不会立即提交。</li></ul></li><li><p><strong>事务确认（多数派协议）</strong>：</p><ul><li>跟随者节点接收到事务后，会发送确认消息（ack）给领导节点。</li><li>当领导节点接收到多数跟随者节点的确认消息后，认为事务已被大多数节点接受，可以提交该事务。</li></ul></li><li><p><strong>提交事务</strong>：</p><ul><li>领导节点将事务标记为已提交，并更新自己的状态。</li><li>领导节点再将提交指令广播给所有跟随者节点，跟随者节点在接收到提交指令后，也会更新自己的状态。</li></ul></li><li><p><strong>返回结果给客户端</strong>：</p><ul><li>领导节点在确认事务已提交后，将处理结果返回给客户端。</li></ul></li></ol><h3 id="实现原理-1" tabindex="-1"><a class="header-anchor" href="#实现原理-1"><span>实现原理</span></a></h3><h4 id="_1-接收和处理客户端请求" tabindex="-1"><a class="header-anchor" href="#_1-接收和处理客户端请求"><span>1. 接收和处理客户端请求</span></a></h4><p>领导节点接收客户端请求并生成事务。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// 存储跟随者节点的连接</span></span>\n<span class="line">    <span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>cnxManager <span class="token operator">=</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Processing client request: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span> transaction <span class="token operator">=</span> <span class="token function">generateTransaction</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">broadcastTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">String</span> <span class="token function">generateTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 生成事务，这里简化为将请求直接作为事务</span></span>\n<span class="line">        <span class="token keyword">return</span> request<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-广播事务" tabindex="-1"><a class="header-anchor" href="#_2-广播事务"><span>2. 广播事务</span></a></h4><p>领导节点将事务广播给所有跟随者节点。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// ... 前文中的内容</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">broadcastTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">receiveTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token comment">// 等待大多数节点确认事务</span></span>\n<span class="line">        <span class="token function">waitForMajorityAck</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">waitForMajorityAck</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">int</span> ackCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>ackCount <span class="token operator">&lt;=</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 模拟等待跟随者节点的确认</span></span>\n<span class="line">            <span class="token comment">// 实际实现中会有超时和重试机制</span></span>\n<span class="line">            ackCount<span class="token operator">++</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token function">commitTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">commitTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Committing transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">commitTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-跟随者节点处理事务" tabindex="-1"><a class="header-anchor" href="#_3-跟随者节点处理事务"><span>3. 跟随者节点处理事务</span></a></h4><p>跟随者节点接收事务并发送确认消息，最后提交事务。</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Follower</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">receiveTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 发送确认消息给领导节点</span></span>\n<span class="line">        <span class="token function">sendAck</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">sendAck</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 模拟发送确认消息</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Sending ack for transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">commitTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Committing transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 更新本地状态</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="整体流程示例代码-1" tabindex="-1"><a class="header-anchor" href="#整体流程示例代码-1"><span>整体流程示例代码</span></a></h3><p>以下是一个完整的代码示例，展示了领导节点处理客户端请求并进行事务同步的过程：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Vote</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">int</span> nodeId<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">long</span> zxid<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">Vote</span><span class="token punctuation">(</span><span class="token keyword">int</span> nodeId<span class="token punctuation">,</span> <span class="token keyword">long</span> zxid<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>nodeId <span class="token operator">=</span> nodeId<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>zxid <span class="token operator">=</span> zxid<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">QuorumCnxManager</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Follower</span><span class="token punctuation">&gt;</span></span> followers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">Follower</span> follower<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        followers<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> follower<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">sendVote</span><span class="token punctuation">(</span><span class="token class-name">Vote</span> vote<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">acknowledgeLeader</span><span class="token punctuation">(</span>vote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token class-name">QuorumCnxManager</span> cnxManager<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>cnxManager <span class="token operator">=</span> cnxManager<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">announceAndSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">Vote</span> leaderVote <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vote</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 假设当前领导节点的 ID 是 1，最新的 ZXID 是 200</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">sendVote</span><span class="token punctuation">(</span>leaderVote<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token function">synchronizeData</span><span class="token punctuation">(</span>follower<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">synchronizeData</span><span class="token punctuation">(</span><span class="token class-name">Follower</span> follower<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        follower<span class="token punctuation">.</span><span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token string">&quot;latest snapshot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;transaction logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Processing client request: &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span> transaction <span class="token operator">=</span> <span class="token function">generateTransaction</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">broadcastTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token class-name">String</span> <span class="token function">generateTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span> request<span class="token punctuation">;</span>  <span class="token comment">// 简化为将请求直接作为事务</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">broadcastTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">receiveTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token function">waitForMajorityAck</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">waitForMajorityAck</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">int</span> ackCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">while</span> <span class="token punctuation">(</span>ackCount <span class="token operator">&lt;=</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token comment">// 模拟等待跟随者节点的确认</span></span>\n<span class="line">            ackCount<span class="token operator">++</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token function">commitTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">commitTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Committing transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Follower</span> follower <span class="token operator">:</span> cnxManager<span class="token punctuation">.</span>followers<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            follower<span class="token punctuation">.</span><span class="token function">commitTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">class</span> <span class="token class-name">Follower</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">acknowledgeLeader</span><span class="token punctuation">(</span><span class="token class-name">Vote</span> leaderVote<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Acknowledged leader: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>nodeId</span>\n<span class="line">         <span class="token operator">+</span> <span class="token string">&quot; with ZXID: &quot;</span> <span class="token operator">+</span> leaderVote<span class="token punctuation">.</span>zxid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">receiveData</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received snapshot: &quot;</span> <span class="token operator">+</span> snapshot<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received transaction logs: &quot;</span> <span class="token operator">+</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">updateState</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> logs<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">updateState</span><span class="token punctuation">(</span><span class="token class-name">String</span> snapshot<span class="token punctuation">,</span> <span class="token class-name">String</span> logs<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;State updated with latest snapshot and logs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">receiveTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Received transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">sendAck</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">sendAck</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Sending ack for transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">commitTransaction</span><span class="token punctuation">(</span><span class="token class-name">String</span> transaction<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Committing transaction: &quot;</span> <span class="token operator">+</span> transaction<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">// 更新本地状态</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperLeaderElection</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">QuorumCnxManager</span> cnxManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QuorumCnxManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Leader</span> leader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span>cnxManager<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token class-name">Follower</span> follower1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Follower</span> follower2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">Follower</span> follower3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Follower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> follower1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> follower2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        cnxManager<span class="token punctuation">.</span><span class="token function">addFollower</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> follower3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        leader<span class="token punctuation">.</span><span class="token function">announceAndSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">        <span class="token comment">// 模拟客户端请求</span></span>\n<span class="line">        leader<span class="token punctuation">.</span><span class="token function">processClientRequest</span><span class="token punctuation">(</span><span class="token string">&quot;Create /node1 data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="处理客户端请求的关键点" tabindex="-1"><a class="header-anchor" href="#处理客户端请求的关键点"><span>处理客户端请求的关键点</span></a></h3><ol><li><strong>生成事务</strong>：领导节点接收到客户端请求后，生成一个事务。</li><li><strong>广播事务</strong>：领导节点将事务广播给所有跟随者节点，等待多数节点确认。</li><li><strong>确认并提交事务</strong>：当领导节点接收到多数跟随者节点的确认消息后，提交事务并通知所有跟随者节点。</li><li><strong>返回结果</strong>：领导节点在事务提交后，将处理结果返回给客户端。</li></ol><p>通过这种机制，Zookeeper 确保了分布式系统中数据的一致性和高可用性。领导节点在处理客户端请求时， 通过与跟随者节点的紧密协作，保证了事务的正确性和数据的一致性。</p>',45)],e={},l=(0,a(6262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,t)}]]),c=JSON.parse('{"path":"/blog/zookeeper/Zookeeper%E9%9B%86%E7%BE%A4%E8%8A%82%E7%82%B9%E5%AE%9E%E7%8E%B0%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86(%E4%BA%8C).html","title":"Zookeeper 集群节点实现通信原理(二)","lang":"zh-CN","frontmatter":{"date":"2021-07-07T00:00:00.000Z","category":["Zookeeper"],"tag":["分布式管理"],"sticky":true,"excerpt":"<p> Zookeeper 客户端命令操作 </p>"},"headers":[{"level":2,"title":"节点选举领导节点完成如何广播给其他节点进行信息同步，实现原理？","slug":"节点选举领导节点完成如何广播给其他节点进行信息同步-实现原理","link":"#节点选举领导节点完成如何广播给其他节点进行信息同步-实现原理","children":[{"level":3,"title":"选举完成后的广播和同步过程","slug":"选举完成后的广播和同步过程","link":"#选举完成后的广播和同步过程","children":[]},{"level":3,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]},{"level":3,"title":"整体流程示例代码","slug":"整体流程示例代码","link":"#整体流程示例代码","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":3,"title":"同步完成处理客户端请求主要是什么？","slug":"同步完成处理客户端请求主要是什么","link":"#同步完成处理客户端请求主要是什么","children":[]},{"level":3,"title":"客户端请求处理过程","slug":"客户端请求处理过程","link":"#客户端请求处理过程","children":[]},{"level":3,"title":"实现原理","slug":"实现原理-1","link":"#实现原理-1","children":[]},{"level":3,"title":"整体流程示例代码","slug":"整体流程示例代码-1","link":"#整体流程示例代码-1","children":[]},{"level":3,"title":"处理客户端请求的关键点","slug":"处理客户端请求的关键点","link":"#处理客户端请求的关键点","children":[]}]}],"git":{"updatedTime":1720536662000,"contributors":[{"name":"asus","email":"939943844@qq.com","commits":1}]},"filePathRelative":"blog/zookeeper/Zookeeper集群节点实现通信原理(二).md"}')}}]);